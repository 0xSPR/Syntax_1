# = Character
include = Identifier
< = RelationalOp
stdio = Identifier
. = Character
h = Identifier
> = RelationalOp
# = Character
include = Identifier
< = RelationalOp
math = Identifier
> = RelationalOp
int = DataTypes
val = Identifier
= = Assignment
1 = Number
; = EndSentence
int = DataTypes
k = Identifier
= = Assignment
3 = Number
; = EndSentence
float = DataTypes
x = Identifier
, = Character
y = Identifier
, = Character
z = Identifier
; = EndSentence
char = DataTypes
l = Identifier
= = Assignment
"c" = String
; = EndSentence
string = DataTypes
name = Identifier
= = Assignment
"Sergio" = String
; = EndSentence
string = DataTypes
message = Identifier
= = Assignment
"Follow The Black Ferret" = String
; = EndSentence
void = Identifier
main = Identifier
( = Character
) = Character
{ = Start
printf = Identifier
( = Character
"\nHola" = String
) = Character
; = EndSentence
scanf = Identifier
( = Character
"%i" = String
) = Character
; = EndSentence
x = Identifier
= = Assignment
( = Character
3 = Number
+ = TermOp
5 = Number
) = Character
* = FactorOp
8 = Number
- = TermOp
( = Character
10 = Number
- = TermOp
4 = Number
) = Character
/ = FactorOp
2 = Number
; = EndSentence
y = Identifier
%= = FactorIn
2 = Number
; = EndSentence
z = Identifier
= = Assignment
( = Character
a = Identifier
+ = TermOp
b = Identifier
) = Character
* = FactorOp
c = Identifier
; = EndSentence
while = Loops
( = Character
x = Identifier
< = RelationalOp
z = Identifier
) = Character
{ = Start
printf = Identifier
( = Character
"Hola" = String
, = Character
val = Identifier
) = Character
; = EndSentence
} = End
do = Loops
{ = Start
printf = Identifier
( = Character
"do" = String
) = Character
; = EndSentence
} = End
while = Loops
( = Character
x = Identifier
< = RelationalOp
11 = Number
) = Character
; = EndSentence
for = Loops
( = Character
x = Identifier
= = Assignment
0 = Number
; = EndSentence
x = Identifier
< = RelationalOp
20 = Number
; = EndSentence
++ = IncreaseTerm
i = Identifier
) = Character
{ = Start
printf = Identifier
( = Character
"for" = String
) = Character
; = EndSentence
} = End
if = Structures
( = Character
z = Identifier
> = RelationalOp
10 = Number
) = Character
scanf = Identifier
( = Character
"hi" = String
) = Character
; = EndSentence
if = Structures
( = Character
( = Character
3 = Number
+ = TermOp
5 = Number
) = Character
* = FactorOp
8 = Number
> = RelationalOp
z = Identifier
) = Character
{ = Start
if = Structures
( = Character
radio = Identifier
% = FactorOp
2 = Number
== = RelationalOp
0 = Number
) = Character
{ = Start
do = Loops
{ = Start
printf = Identifier
( = Character
"do" = String
) = Character
; = EndSentence
} = End
while = Loops
( = Character
( = Character
x = Identifier
* = FactorOp
9 = Number
+ = TermOp
2 = Number
) = Character
< = RelationalOp
11 = Number
) = Character
; = EndSentence
} = End
else = Structures
if = Structures
( = Character
z = Identifier
> = RelationalOp
6 = Number
) = Character
{ = Start
for = Loops
( = Character
k = Identifier
= = Assignment
0 = Number
; = EndSentence
k = Identifier
< = RelationalOp
20 = Number
; = EndSentence
k = Identifier
++ = IncreaseTerm
) = Character
{ = Start
printf = Identifier
( = Character
"for" = String
) = Character
; = EndSentence
} = End
} = End
else = Structures
{ = Start
while = Loops
( = Character
( = Character
y = Identifier
% = FactorOp
2 = Number
+ = TermOp
4 = Number
) = Character
> = RelationalOp
10 = Number
) = Character
{ = Start
printf = Identifier
( = Character
"Hola" = String
, = Character
val = Identifier
) = Character
; = EndSentence
} = End
} = End
} = End
} = End
 = End
